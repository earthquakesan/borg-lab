---
- name: install pip3
  apt:
    name: python3-pip
    state: latest
    update_cache: yes
- name: install borgmatic
  pip:
    name: "borgmatic=={{ borgmatic_version }}"
    executable: pip3
- name: create /etc/borgmatic directory
  file:
    state: directory
    path: "/etc/borgmatic"
- name: get ping_url from .hchk file
  shell: >
    cat ~/.hchk | grep ping_url | cut -d'=' -f 2 | tr -d "[:blank:]"
  register: ping_url
- name: set ping_url output to healthchecks_ping_url var
  set_fact:
    healthchecks_ping_url: "{{ ping_url.stdout }}"
- name: init configuration
  template:
    src: config.yaml
    dest: /etc/borgmatic/config.yaml
    mode: "0600"
    owner: root
    group: root
- name: check if repository already exists
  shell: borg check {{ repository }}
  register: borg_check_repository
  environment:
    BORG_PASSPHRASE: "{{ repository_passphrase }}"
  ignore_errors: yes
- name: initialize a borg repository
  command: borg init --make-parent-dirs -e repokey-blake2 {{ repository }}
  when: borg_check_repository.failed
  environment:
    BORG_PASSPHRASE: "{{ repository_passphrase }}"
  no_log: True
- name: install cronjob to backup the local files
  template:
    src: cronjob.j2
    dest: /etc/cron.d/borgmatic
    mode: "0700"
    owner: root
    group: root
- name: create /root/bin directory
  file:
    state: directory
    path: /root/bin
- name: install pagerduty-notification.sh in /root/bin/pagerduty-notification.sh
  template:
    src: pagerduty-notification.sh.j2
    dest: /root/bin/pagerduty-notification.sh
    mode: "0700"
    owner: root
    group: root